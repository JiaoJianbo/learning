# 默认公用配置
server:
  port: 8080
  #context-path: /
  error:
    whitelabel:
      enabled: false # Switch the default error page off 
  compression:
    enabled: true # Response compression is enabled
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    #min-response-size: 2048 # Minimum response size that is required for compression to be performed.
  session:
    timeout: 100 # 单位：秒，默认的Tomcat容器中session最短时间是1分钟, 见 TomcatEmbeddedServletContainerFactory

spring:
  profiles:
    active: dev,h2sql,hikariCP
  resources:
    static-locations: classpath:/resources/,classpath:/templates/,classpath:/static/ # Locations of static resources ,classpath:/META-INF/resources/,classpath:/META-INF/resources/webjars/
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    content-type: text/html
    enabled: true
    encoding: UTF-8
    mode: HTML    # LEGACYHTML5 是非严格的HTML检查，但是要在pom.xml中添加额外的依赖
    cache: false  # Disabled caching when dev
 
  # Internationalization 国际化
  messages:
    # always-use-message-format: false # Set whether to always apply the MessageFormat rules, parsing even messages without arguments.
    basename: i18n/messages # Comma-separated list of basenames. 可以有多个资源文件
    cache-seconds: -1 # Loaded resource bundle files cache expiration, in seconds. -1: cached forever.
    encoding: UTF-8
    fallback-to-system-locale: true # 如果没有设置 Locale，使用系统的.

  # If your terminal supports ANSI, color output will be used to aid readability. 
  # Color coding is configured using the %clr conversion word.
  output:
    ansi:
      enabled: DETECT  # ALWAYS, NEVER
  cache:
    jcache:
      config: classpath:ehcache.xml #ehcache3，而ehcache2使用spring.cache.ehcache.config配置
  session: # Spring session
    store-type: none # REDIS, MONGO, JDBC, HAZELCAST, HASH_MAP, NONE. Session持久化的方式，集群部署下方便session管理。
    

mybatis:
  type-aliases-package: com.bravo.demo.ssm.entity # 实体类包，也可写作 typeAliasesPackage
  configuration:
    jdbc-type-for-null: NULL
    map-underscore-to-camel-case: true
    lazy-loading-enabled: true # 延迟加载
    aggressive-lazy-loading: false
    #lazy-load-trigger-methods: equals,clone,hashCode,toString
  #config-location:  # 指定全局配置文件。如果全局配置比较多，可以单独写在全局配置文件 
  mapper-locations: classpath:mapper/*Mapper.xml  # 映射文件的位置，也可写作 mapperLocations

# 默认log配置方式
#logging:
 # level:
  #  root: INFO
   # org.springframework: WARN
    #com.bravo: DEBUG

---
# development 环境
debug: false # true: 可以开启AUTO-CONFIGURATION REPORT
spring:
  profiles: dev
  # Developer tools
  devtools:
    restart: 
      enabled: true
      exclude: /META-INF/maven/**, /META-INF/resources/**, /resources/**, /static/**, /public/**, /templates/**
      additional-exclude: /database/**
      #trigger-file: application.yaml
  redis:
    host: localhost
    port: 6379
  rabbitmq:
    host: localhost
    port: 5672
    virtual-host: /
    username: guest
    password: guest
logging:
  config: classpath:log4j2-spring.xml
management:
  security:
    enabled: false # actuator endpoints can be accessed without requiring authentication.
  context-path: /management
  port: 8081
server:
  tomcat:
    basedir: D:\applog\spring-mybatis\my-tomcat
    accesslog: # config access log
      enabled: true
      pattern: "%t %a %S [%r] %s (%D ms)"
security:
  basic:
    enabled: true
  user:
    name: admin
    password: 1

---
# production 环境
spring:
  profiles: prod
server:
  port: 80
logging:
  config: classpath:log4j2-spring.xml


### Database Profiles, 如果切换了数据库，不要忘了修改pom.xml中的dependency
--- 
# H2 database
spring:
  profiles: h2sql
  datasource:
    #jndi-name: "java:comp/env/jdbc/testDS"

    #url: jdbc:h2:file:~/.h2/mydb # Embedded (local) connection。会保存持久化数据文件
    #url: jdbc:h2:tcp://127.0.0.1/mem:mydb # Server mode (remote connections)。 这种方式必须先启动H2
    url: jdbc:h2:mem:mydb # In-memory (named)。数据在内存中，服务启动，在内存中创建数据库，服务关闭，数据丢失
    driver-class-name: org.h2.Driver 
    username: test
    password: 
    # 进行该配置后，每次启动程序，都会运行sql文件，对数据库的结构进行操作。
    # refer to: https://www.cnblogs.com/jin-zhe/archive/2018/01/05/8203347.html
    initialize: true # true: 执行下面SQL脚本初始化数据库. false：不执行脚本
    schema: classpath:database/h2/schema.sql
    data: classpath:database/h2/data.sql
  # h2 web consloe 数据库GUI管理应用
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        trace: false
        web-allow-others: true

---
# MySQL database
spring:
  profiles: mysql
  datasource:
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/spring_mybatis?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
    username: root
    password: root
    initialize: true # true: 执行下面SQL脚本初始化数据库. false：不执行脚本
    schema: classpath:database/mysql/schema.sql
    data: classpath:database/mysql/data.sql

### DataSource Profiles, 如果DataSource改变，不要忘了修改pom.xml中的dependency
---
# Druid DataSource
spring:
  profiles: druid
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    # 以下属性参考 com.alibaba.druid.pool.DruidDataSource 类。这些属性是 DruidDataSource 的，默认不会自动绑定，需要我们写Configuration绑定
    initial-size: 5
    #max-idle: 5  # maxIdle is deprecated
    #maximumPoolSize: 50  # 没有这个配置
    max-active: 30
    maxWait: 60000 # millis
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计。wall：用于防火墙
    filters: stat,wall
    useGlobalDataSourceStat: true
    connectProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

---
# Hikari DataSource
spring:
  profiles: hikariCP
  datasource:
    # Refer to: https://github.com/brettwooldridge/HikariCP#popular-datasource-class-names
    #data-source-class-name: org.h2.jdbcx.JdbcDataSource
    type: com.zaxxer.hikari.HikariDataSource # Hikari DataSource
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
      auto-commit: true
      idle-timeout: 30000
      pool-name: MyHikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1 FROM DUAL

# 自定义配置
bravo:
  security:
#    loginUrl: /mylogin.html  不配置使用默认值
#    loginType: JSON
#    remember-me-seconds: 3600
#    captcha:
#      width: 80
#      height: 20
#      length: 6
#      font-size: 22
#      target-url: /authentication/form
#    max-sessions-prevents-login: true
    

